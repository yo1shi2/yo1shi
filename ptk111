

  MAINPAGE.XAML

<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TrafficLight.MainPage">

    <VerticalStackLayout Padding="20" Spacing="20" VerticalOptions="Center" BackgroundColor="White">

        <Grid x:Name="TrafficLightContainer" RowSpacing="1" Padding="10" WidthRequest="150" HeightRequest="300">
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
                <BoxView x:Name="RedLight" Color="Gray" CornerRadius="50" HeightRequest="100" WidthRequest="100" Grid.Row="0" />
                <BoxView x:Name="YellowLight" Color="Gray" CornerRadius="50" HeightRequest="100" WidthRequest="100" Grid.Row="1" />
                <BoxView x:Name="GreenLight" Color="Gray" CornerRadius="50" HeightRequest="100" WidthRequest="100" Grid.Row="2" />
        </Grid>

        <Button x:Name="ChangeColorButton" Text="Change Color" Clicked="OnChangeColorClicked" />

        <VerticalStackLayout>
            <Entry x:Name="TimerEntry" Placeholder="Enter timer in seconds" Keyboard="Numeric" />
            <Button x:Name="StartAutoChangeButton" Text="Start Auto Change" Clicked="OnStartAutoChangeClicked" />
        </VerticalStackLayout>

        <Button x:Name="StopAutoChangeButton" Text="Stop Auto Change" IsVisible="False" Clicked="OnStopAutoChangeClicked" />

    </VerticalStackLayout>

</ContentPage>

MAINPAGE.XAML.CS


using Npgsql;
using System.Data;

namespace WinFormsApp5
{ 
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnLoadData_Click(object sender, EventArgs e)
        {
            NpgsqlConnection conn = null;
            DataTable dataTable = new DataTable();
            try
            {
                conn = dbconnection.GetConnection();
                if (conn != null)
                {
                    string sqlQuery = "SELECT * FROM Products;";

                    using (NpgsqlDataAdapter adapter = new NpgsqlDataAdapter(sqlQuery, conn))
                    {
                        adapter.Fill(dataTable);
                    }
                    dgvData.DataSource = dataTable;
                }
            }
            catch (NpgsqlException ex)
            {

            }
            finally
            {
                conn.Close();
                conn.Dispose();
            }
        }
    }
}

CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,            -- Уникальный ID пользователя, автоинкремент, первичный ключ
    username VARCHAR(50) UNIQUE NOT NULL,  -- Имя пользователя (до 50 символов), уникальное, не пустое
    email VARCHAR(100) UNIQUE NOT NULL,   -- Email (до 100 символов), уникальный, не пустой
    password_hash VARCHAR(255) NOT NULL,  -- Хэш пароля (до 255 символов), не пустой
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- Время создания записи (по умолчанию - текущее время)
);


INSERT INTO users (username, email, password_hash) VALUES
('alice_123', 'alice@example.com', 'hashed_pass_for_alice'),
('bob_456', 'bob@example.com', 'hashed_pass_for_bob');

Выбрать все столбцы из таблицы users:
SQL

SELECT * FROM users;
Выбрать только username и email из таблицы users:
SQL

SELECT username, email FROM users;
Выбрать пользователей, у которых user_id равен 1:
SQL

SELECT * FROM users WHERE user_id = 1;
Выбрать пользователей, чье имя пользователя начинается с 'a' (регистронезависимо):
SQL

SELECT * FROM users WHERE username ILIKE 'a%';
Как выполнить: Вставьте код в Query Tool и нажмите "Execute/Refresh". Результат появится в нижней панели "Data Output".

г) Обновление данных (UPDATE)
Изменяет существующие данные в таблице.

Пример: Меняем email пользователя alice_123.

SQL

UPDATE users
SET email = 'new_alice_email@example.com'
WHERE username = 'alice_123';
Внимание! Всегда используйте WHERE с UPDATE, иначе вы обновите все записи в таблице!

Как выполнить: Вставьте код в Query Tool и нажмите "Execute/Refresh".

д) Удаление данных (DELETE FROM)
Удаляет строки из таблицы.

Пример: Удаляем пользователя с user_id, равным 2.

SQL

DELETE FROM users
WHERE user_id = 2;

3. Создание внешнего ключа с помощью SQL
Хотя pgAdmin предоставляет графический интерфейс, часто более гибким и рекомендуемым способом является использование SQL-запросов.

Пример создания внешней связи для таблицы Заказы, ссылающейся на вашу таблицу Пользователи:

SQL

CREATE TABLE Заказы (
    OrderID SERIAL PRIMARY KEY,
    UserID INT NOT NULL, -- Колонка для внешнего ключа
    ДатаЗаказа TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    Сумма DECIMAL(10, 2),
    FOREIGN KEY (UserID) REFERENCES Пользователи(UserID)
    ON DELETE CASCADE -- Пример: если пользователь удаляется, удаляются и все его заказы
    ON UPDATE CASCADE -- Пример: если UserID пользователя изменяется, обновляются и UserID в заказах
);
Если таблица Заказы уже существует, вы можете добавить внешний ключ с помощью ALTER TABLE:

SQL

ALTER TABLE Заказы
ADD CONSTRAINT fk_orders_users
FOREIGN KEY (UserID)
REFERENCES Пользователи(UserID)
ON DELETE CASCADE
ON UPDATE CASCADE;











